.TH "md_README" 3 "Sat Jul 24 2021" "SynnixOS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_README \- SynnixOS 
Epic Hobby OS targeting x86_64 CPUs, it includes some hacked together functionality for most essential OSs although, with interactivity via QEMU serial0
.PP
Grab the latest stable release \fChere\fP
.PP
And pick up a nightly build \fChere\fP
.PP
Latest releases are released when I upload it manually, and nightly are at 10:30am everyday\&.
.SH "Requirements"
.PP
.IP "\(bu" 2
Atleast 5GB is required to store the full compiled source and toolchain
.IP "\(bu" 2
2GB or more available RAM is recommended for building the project
.IP "\(bu" 2
Dual Core at the bare minimum is recommended
.PP
.SH "Features"
.PP
.IP "\(bu" 2
ELF Loader
.IP "\(bu" 2
Multiboot support
.IP "\(bu" 2
POSIX Compliance
.IP "\(bu" 2
Lua port
.IP "\(bu" 2
Userspace
.IP "\(bu" 2
Kernel Modules
.IP "\(bu" 2
Serial communications
.IP "\(bu" 2
Multi-threading
.IP "\(bu" 2
Virtual File System
.IP "\(bu" 2
TTY
.IP "\(bu" 2
PCI support
.IP "\(bu" 2
Syscall tracing for debugging
.IP "\(bu" 2
Decent LibC
.IP "\(bu" 2
LibM
.IP "\(bu" 2
InitFS
.IP "\(bu" 2
Interactive Shell supporting piping, file redirection and executable search path
.IP "\(bu" 2
x86_64 support
.IP "\(bu" 2
Networking stack (Sockets, Maybe TCP in the future)
.IP "\(bu" 2
Proc File System
.IP "\(bu" 2
Unix-like enviroment
.IP "\(bu" 2
GRUB Bootloader, not sweaty limine\&. (Could probably port it though :thinking:)
.PP
.SH "Contributing"
.PP
\fCLearn more about how you can help here!\fP
.SH "Building"
.PP
For building SynnixOS you'll need a few dependencies\&. Please install the following on your \fBunix-like\fP system (If on windows consider \fCWSL\fP)
.PP
(These follow Ubuntu package names for APT)
.PP
.IP "\(bu" 2
\fCmtools\fP
.IP "\(bu" 2
\fCgrub-pc-bin\fP
.IP "\(bu" 2
\fCnasm\fP
.IP "\(bu" 2
\fClibgmp-dev\fP
.IP "\(bu" 2
\fClibmpc-dev\fP
.IP "\(bu" 2
\fClibmpfr-dev\fP
.IP "\(bu" 2
\fCxorriso\fP
.IP "\(bu" 2
\fCruby\fP
.IP "\(bu" 2
\fCmake\fP
.PP
.PP
After installing these dependencies you'll need to build the \fCx86_64-synnixos\fP toolchain for cross compiling the OS and it's programs\&. Run the \fC\&./scripts/build_toolchain\&.bash\fP file from the root of the git repository and wait around 10 or so minutes for it to complete\&.
.PP
Once the toolchain has finished compiling you can run \fCmake\fP in the root of the repo to build the OS it should optimaly take only around 30 seconds to compile the OS\&.
.PP
Then after compiling the OS initially \fCcd\fP into \fCexternal\fP and run \fC\&./make\&.bash\fP to build the various ports of third party software, then go \fCcd \&.\&.\fP back into the root directory and run \fCmake\fP once more to package the ports into the ISO
.PP
After completing all these steps, you may run \fC\&./run\&.rb\fP to run the \fCQEMU\fP emulator with the \fCsynnixos\&.iso\fP ISO
.SH "References"
.PP
.SS "Books and resources"
OSDev Wiki - \fChttps://osdev\&.org\fP
.PP
The Little OS Book - \fChttps://littleosbook\&.github\&.io/\fP
.SS "Projects"
Sortix - \fChttps://sortix\&.org/\fP
.PP
Pedigree Project - \fChttps://miselin\&.github\&.io/pedigree/\fP
.PP
Aenix - \fChttps://github\&.com/littleosbook/aenix\fP
.PP
The Managram Project - \fChttps://github\&.com/managarm\fP
.PP
Toaruos - \fChttps://github\&.com/klange/toaruos\fP
.PP
mOS - \fChttps://github\&.com/MQuy/mos\fP
.SH "Other awesome OS projects"
.PP
VisualOS - \fChttps://github\&.com/nothotscott/VisualOS\fP
.PP
Aero - \fChttps://github\&.com/Andy-Python-Programmer/aero\fP
.SH "License"
.PP
SynnixOS is licensed under the \fCMIT License\fP 
